import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;

class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
      
        //현재 동일한 번호의 개수
        //6개 동일 -> 1
        //2개 동일 -> 5
        //6 낙첨
        
        //0인 번호의 개수
        //
        
        int sameNum = 0;
        int zeroNum = 0;
        
        for(int i=0; i <lottos.length; i++){
            if(lottos[i] == 0) {
                zeroNum++;
            }
            
            for(int j =0; j<win_nums.length;j++){
                if(lottos[i] == win_nums[j]){
                    sameNum++;
                }
                
            }
        }
        
        int[] answer = new int[2];
        
        //높은 순위
        int high = 7-sameNum-zeroNum;
        if(high == 7) {
            high = 6;
        }
        
        int low = 7 - sameNum;
         if(low == 7) {
            low = 6;
        }
            
        //낮은 순위
        answer[0] = high;
        answer[1] = low;
        return answer;
    }
}import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;

class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
      
        //현재 동일한 번호의 개수
        //6개 동일 -> 1
        //2개 동일 -> 5
        //6 낙첨
        
        //0인 번호의 개수
        //
        
        int sameNum = 0;
        int zeroNum = 0;
        
        for(int i=0; i <lottos.length; i++){
            if(lottos[i] == 0) {
                zeroNum++;
            }
            
            for(int j =0; j<win_nums.length;j++){
                if(lottos[i] == win_nums[j]){
                    sameNum++;
                }
                
            }
        }
        
        int[] answer = new int[2];
        
        //높은 순위
        int high = 7-sameNum-zeroNum;
        if(high == 7) {
            high = 6;
        }
        
        int low = 7 - sameNum;
         if(low == 7) {
            low = 6;
        }
            
        //낮은 순위
        answer[0] = high;
        answer[1] = low;
        return answer;
    }
}