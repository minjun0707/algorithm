import java.util.*;
class Solution {
    

    public int solution(int[][] board, int[] moves) {
        
        //[1,5,3,5,1,2,1,4]
        
       Stack<Integer> stack = new Stack();
        
        // 터트려져 사라진 인형의 개수
        int answer = 0;
        //]0, 0, 0, 0, 0]
        //[0, 0, 1, 0, 3]
        //[0, 2, 5, 0, 1]
        //[4, 2, 4, 4, 2]
        //[3, 5, 1, 3, 1]
        
        
        for(int i=0; i< moves.length;i++) {
            int grapedDoll = grapDoll(moves[i],board);
            
            if(grapedDoll == 0) {
                continue;
            }
            
            stack.push(grapedDoll);
            
                
            if(stack.size() >= 2 ){
                int top = stack.pop();
                int beforeTop = stack.pop();

                if(top != beforeTop) {
                    stack.push(beforeTop);
                    stack.push(top);
                } else {
                    answer = answer + 2;
                }
            }
            
            
            
        }
        

        return answer;
    }
    
    
    //인형을 잡기 , 리턴 인형
    //1번 라인에 위치한 인형을 잡는다
    public int grapDoll(int line,int[][] board) {
        
        // for(int i=0; i<board.length;i++){
        //     System.out.println();
        //     for(int j=0; j<board.length;j++){
        //         System.out.print(board[i][j]);
        //     }
        // }
        //  System.out.println();
        
        int grapedDoll = 0;
        //보드에 맨위부터 맨아래까지 탐색
        for(int i = 0; i <board.length; i++) {
            if(board[i][line-1] == 0) {
                continue;
            }
            
            grapedDoll = board[i][line-1];
            board[i][line-1] = 0;
            break;
            
            
        }

        return grapedDoll;
    }

}