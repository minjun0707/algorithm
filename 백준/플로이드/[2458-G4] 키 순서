import java.util.*;

class Main {

	static int N;
	static int M;
	static int[][] dist;
	static final int INF = 1000;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		//학생 수
		N = sc.nextInt();

		//횟수
		M = sc.nextInt();

		dist = new int[N+1][N+1];

		for(int i=1; i<=N; i++) {
			for(int j=1; j<=N; j++) {
				if(i != j) {
					dist[i][j] = INF;
				}
			}
		}

		for(int i=0; i<M; i++) {
			int small = sc.nextInt();
			int big =  sc.nextInt();

			dist[small][big] = 1;

		}

		floyd();

		int count = 0;
		for(int i=1; i<=N; i++) {
			boolean isKnow = true;
			for(int j=1; j<=N; j++) {
				if(dist[i][j] == INF) {
					if(dist[j][i] == INF) {
						isKnow = false;
						break;
					}

				}
			}

			if(isKnow) {
				count ++;
			}
		}

		// for(int i=1; i<=N; i++) {
		// 	System.out.println();
		// 	for(int j=1; j<=N; j++) {
		// 		System.out.print(dist[i][j] + " ");
		// 	}
		// }
		// System.out.println();
		System.out.println(count);


	}

	static void floyd() {
		for(int k=1; k<=N; k++) {
			for(int i=1; i<=N; i++) {
				for(int j=1; j<=N; j++) {
					if(dist[i][j] > dist[i][k] +dist[k][j]) {
						dist[i][j] = dist[i][k] + dist[k][j];
					}
				}
			}
		}
	}

}




