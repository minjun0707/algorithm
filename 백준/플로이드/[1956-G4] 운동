import java.util.*;

class Main {

	static final int INF = 400*10001;
	static int V;
	static int E;
	static int[][] dist;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		V = sc.nextInt();
		E = sc.nextInt();

		dist = new int[V + 1][V + 1];

		for (int i = 1; i <= V; i++) {
			for (int j = 1; j <= V; j++) {
				if (i != j) {
					dist[i][j] = INF;
				}
			}
		}

		for (int i = 0; i < E; i++) {
			int start = sc.nextInt();
			int end = sc.nextInt();
			int distance = sc.nextInt();

			//list.get(start).add(new Node(end, distance));
			dist[start][end] = distance;
		}

		floyd();

		int answer = Integer.MAX_VALUE;
		for(int i=1; i<=V; i++) {
			for(int j=1; j<=V; j++) {
				if(i == j) {
					continue;
				}

				if(dist[i][j] == INF || dist[j][i] == INF) {
					continue;
				}

				int val = dist[i][j] + dist[j][i];
				answer = Math.min(val,answer);

			}
		}

		if(answer == Integer.MAX_VALUE ) {
			System.out.println(-1);
		} else {
			System.out.println(answer);
		}

		//0 or INF
	}

	static void floyd() {
		for(int k=1; k<= V;k++) {
			for(int i=1; i<= V; i++) {
				for(int j=1; j<=V; j++) {
					if(dist[i][j] > dist[i][k] + dist[k][j]) {
						dist[i][j] = dist[i][k] + dist[k][j];
					}
				}
			}
		}
	}


}




