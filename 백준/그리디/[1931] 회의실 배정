import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int N = Integer.parseInt(br.readLine());
		int arr[][] = new int[N][2];

		for(int i=0; i< N; i++ ){
			StringTokenizer st = new StringTokenizer(br.readLine());
			arr[i][0] = Integer.parseInt(st.nextToken());
			arr[i][1] = Integer.parseInt(st.nextToken());
		}


		//끝나는 시간이 작은 순으로 정렬
		Arrays.sort(arr,(s1,s2) -> {
			//만약 끝나는 시간이 갔다면 시작시간이 작은 순서대로 정렬
			if(s1[1] == s2[1]) {
				return s1[0] - s2[0];
			}

			return s1[1] - s2[1];
		});

		int count = 0;

		int prev_end_time = 0;
		for(int i=0; i<arr.length; i++) {
			//직전 종료시간이 다음 회의 시작 시간보다 작거나 같다면 갱신
			if(prev_end_time <= arr[i][0]) {
				prev_end_time = arr[i][1];
				count++;
			}
		}

		System.out.println(count);

	}

}