import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class Main {

	int N;
	int K;
	int[] dp;
	int[] coin;
	boolean isImpossible = false;
             
	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		//동전 개수
		int N = Integer.parseInt(st.nextToken());

		//동전 가치의 합
		int K = Integer.parseInt(st.nextToken());

		//최소 동전의 개수
		dp = new int[K + 1];

		for(int i=1; i<=K; i++){
			dp[i] =100001;
		}
		dp[0] = 0;

		for (int i = 1; i <= N; i++) {
			int coin = Integer.parseInt(br.readLine());

			for (int j = coin; j <= K; j++) {
				dp[j] = Math.min(dp[j],dp[j-coin] + 1);

			}
		}

		if(dp[K] == 100001)
			System.out.println(-1);
		else {
			System.out.println(dp[K]);
		}

	}

}


