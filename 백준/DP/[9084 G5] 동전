import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static final long mod = 1000000000;

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int tc = Integer.parseInt(br.readLine());
        for (int i = 0; i < tc; i++) {

            // 동전 개수
            int N = Integer.parseInt(br.readLine());

            int[] coin = new int[N + 1];

            StringTokenizer st = new StringTokenizer(br.readLine());

            // 동전 개수만큼 반복
            for (int j = 1; j <= N; j++) {
                coin[j] = Integer.parseInt(st.nextToken());
            }

            // 금액
            int amount = Integer.parseInt(br.readLine());

            // dp 생성
            int dp[][] = new int[N + 1][amount + 1];

            for (int j = 0; j <= N; j++)
                dp[j][0] = 1;

            // dp 채우기
            for (int j = 1; j <= N; j++) {
                for (int k = 1; k <= amount; k++) {
                    dp[j][k] = dp[j - 1][k];

                    if (k >= coin[j]) {
                        dp[j][k] += dp[j][k - coin[j]];
                    }
                }
            }

            System.out.println(dp[N][amount]);

        }

    }

}