import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class Main {
	int N;
	long dp[][];
	long mod = 1000000000;

	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());

		dp = new long[N + 1][11];

		//dp 테이블 1로 초기화
		for (int i = 0; i <= 9; i++) {
			dp[1][i] = 1;
		}
		dp[1][0] = 0;

		for (int i = 2; i <= N; i++) {
			for (int j = 0; j <= 9; j++) {
				if (j == 0) {
					dp[i][j] = (dp[i-1][j+1]) % mod;
				} else if (j == 9) {
					dp[i][j] = dp[i-1][j-1] % mod;
				} else {
					dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]) % mod;
				}
			}
		}

		long answer = 0;
		for (int i = 0; i <=9 ; i++) {
			answer = answer + dp[N][i];
		}

		System.out.println(answer % mod);
	}

}




