import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class Main {

	int N;
	int K;

	int[] weight;
	int[] value;
	int[][] dp;


	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());

		//dp
		value = new int[N+1];
		weight = new int[N+1];
		dp = new int[N+1][K+1];

		for (int i = 1; i <= N; i++) {
			st = new StringTokenizer(br.readLine());
			weight[i] = Integer.parseInt(st.nextToken());
			value[i] = Integer.parseInt(st.nextToken());
		}

		for (int i = 1; i <= N; i++) {
			for (int j = 1; j <= K; j++) {
				dp[i][j] = dp[i-1][j];     // 이전 행 결과 복사
				if(j - weight[i]>=0) {    // 무게가 남으면
					dp[i][j] = Math.max(dp[i][j], dp[i-1][j-weight[i]]+value[i]); // 더 큰 값으로 갱신
				}
			}
		}

		System.out.println(dp[N][K]);
	}

}

