import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class Main {

	int[][] map;
	int[][] dp;
	int N;
	int M;

	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		dp = new int[N+1][M+1];

		for (int i = 1; i <= N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 1; j <= M; j++) {
				dp[i][j] = Integer.parseInt(st.nextToken());
			}
		}



		for (int i = 1; i <= N; i++) {
			for (int j = 1; j <=M ; j++) {

				int nowMax = dp[i-1][j-1];

				if(dp[i-1][j] > nowMax) {
					nowMax = dp[i-1][j];
				}
				if(dp[i][j-1] > nowMax) {
					nowMax = dp[i][j-1];
				}

				dp[i][j] = dp[i][j] + nowMax;

			}
		}

		System.out.println(dp[N][M])
	}

}


