import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

	int T;
	int n;

	int[][] map;
	int[][] dp;

	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//테스트케이스 개수
		T = Integer.parseInt(br.readLine());



		//테스트케이스 만큼 반복
		for (int i = 0; i < T; i++) {
			//정수 n이 주어진다
			n = Integer.parseInt(br.readLine());
			map = new int [2][100001];
			dp = new int [2][100001];

			//map[0][] 과 map[1][] 입력 받기
			StringTokenizer st =new StringTokenizer(br.readLine());
			for (int j = 1; j <= n; j++) {
				map[0][j] = Integer.parseInt(st.nextToken());
			}

			st =new StringTokenizer(br.readLine());
			for (int j = 1; j <= n; j++) {
				map[1][j] = Integer.parseInt(st.nextToken());
			}

			//초기값 설정
			dp[0][1] = map[0][1];
			dp[1][1] = map[1][1];

			dp[0][2] = map[1][1]+ map[0][2];
			dp[1][2] = map[0][1]+ map[1][2];

			for (int j = 3; j <= n ; j++) {
				dp[0][j] = Math.max(dp[1][j-2],dp[1][j-1]) + map[0][j];
				dp[1][j] = Math.max(dp[0][j-2],dp[0][j-1]) +  map[1][j];
			}

			System.out.println(Math.max(dp[0][n],dp[1][n]));
		}




	}

}





