import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Stack;
import java.util.StringTokenizer;

import org.w3c.dom.Node;

public class Main {

	int n;
	int m;

	//그림의 개수
	int count =0;


	// 가장 넓은 그림의 넓이
	int maxSize = 0;

	int[][] map;
	boolean[][] visit;
	int[] dirR = {1,-1,0,0};
	int[] dirC = {0,0,1,-1};
	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());

		int[] arr = new int[n];
		int[] dp = new int[n];

		StringTokenizer st = new StringTokenizer(br.readLine());

		for(int i=0; i < arr.length; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}


		for(int i=0; i< n; i++) {
			//1로 초기화
			dp[i] = 1;
			for(int j=0; j< i; j++) {
				if(arr[j] < arr[i]) {
					dp[i] = Math.max(dp[i],dp[j]+1);
				}
			}
		}

		int max = 0;
		for(int i=0; i < arr.length;i++) {
			max = Math.max(max,dp[i]);
		}

		System.out.println(max);



	}



}















