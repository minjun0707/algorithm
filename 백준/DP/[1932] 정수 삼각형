import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;
import java.util.function.Predicate;

public class Main {

	int N;
	int dp[][];

	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		N = Integer.parseInt(br.readLine());
		dp = new int[N + 1][N + 1];
		int[][] arr = new int[N+1][N+1];

		for (int i = 1; i <= N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int j = 1; j <= i; j++) {
				dp[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		for (int i = 1; i <= N; i++) {
			for (int j = 1; j <= i ; j++) {
				dp[i][j] = Math.max(dp[i-1][j-1],dp[i-1][j]) + dp[i][j];
			}
		}

		int answer = Integer.MIN_VALUE;
		for (int i = 1; i <= N ; i++) {
			answer = Math.max(dp[N][i],answer);
		}

		System.out.println(answer);
	}

}



