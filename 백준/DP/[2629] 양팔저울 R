import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.function.Predicate;

public class Main {

	public static void main(String[] args) throws IOException {
		new Main().solution();
	}

	public void solution() throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		// 무게 추 개수
		int N = Integer.parseInt(br.readLine());

		boolean[] dp = new boolean[16000];
		int[] weight = new int[N+1];
		int chuMax = 0;

		StringTokenizer st = new StringTokenizer(br.readLine());

		for (int i = 1; i <= N; i++) {
			weight[i] = Integer.parseInt(st.nextToken());
			chuMax = chuMax + weight[i];
		}

		// 확인 할려는 구슬의 무게 개수
		int K = Integer.parseInt(br.readLine());
		st = new StringTokenizer(br.readLine());

		int[] checkAnswer = new int[K+1];
		for (int i = 1; i <= K ; i++) {
			checkAnswer[i] = Integer.parseInt(st.nextToken());
		}


		//첫번째 무게를 트루
		dp[0]= true;
		for (int i = 1; i <= N ; i++) {

			//더하기
			for (int j = chuMax; j >=0 ; j--) {
				if(dp[j]) {
					dp[j+weight[i]] = true;
				}
			}


			//빼기
			for (int j = 0; j <= chuMax; j++) {
				if(dp[j]) {
					dp[Math.abs(j-weight[i])] = true;
				}
			}
		}

		StringBuilder sb = new StringBuilder();

		for (int i = 1; i <= K; i++) {
			if(dp[checkAnswer[i]] == true) {
				sb.append("Y ");
			} else {
				sb.append("N ");
			}
		}

		System.out.println(sb);

	}



}




