import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import java.util.*;

class Main {

	static int visit[];
	static int X;
	static int K;

	static int answer = Integer.MAX_VALUE;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		visit = new int[1000001];

		X = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		bfs(X);

		System.out.println(answer);

	}

	static void bfs(int val) {
		Queue<Integer> que = new LinkedList<Integer>();
		que.offer(val);

		while(!que.isEmpty()) {
			int now = que.poll();

			if(now == K) {
				answer = visit[now];;
				break;
			}

			if(now -1 >=0 && visit[now-1] ==0) {
				que.offer(now-1);
				visit[now-1] = visit[now] + 1;
			}
			if(now +1<= 1000000 && visit[now+1] ==0) {
				que.offer(now+1);
				visit[now+1] = visit[now] + 1;
			}
			if(now * 2 <=1000000 && visit[now*2] ==0) {
				que.offer(now*2);
				visit[now*2] = visit[now] + 1;
			}
		}

	}


}




